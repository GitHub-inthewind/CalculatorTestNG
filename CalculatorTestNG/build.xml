<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="CalculatorTestNG">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="TestNG.libraryclasspath">
        <pathelement location="D:/工具/AutoTestTools/eclipse-java-mars-1-win32-x86_32/eclipse/plugins/org.testng.eclipse_6.9.11.201604020423/lib/testng.jar"/>
        <pathelement location="D:/工具/AutoTestTools/eclipse-java-mars-1-win32-x86_32/eclipse/plugins/org.testng.eclipse_6.9.11.201604020423/lib/jcommander.jar"/>
        <pathelement location="D:/工具/AutoTestTools/eclipse-java-mars-1-win32-x86_32/eclipse/plugins/org.testng.eclipse_6.9.11.201604020423/lib/bsh-2.0b4.jar"/>
        <pathelement location="D:/工具/AutoTestTools/eclipse-java-mars-1-win32-x86_32/eclipse/plugins/org.testng.eclipse_6.9.11.201604020423/lib/snakeyaml.jar"/>
    </path>
    <path id="Appium_NeedLibs.userclasspath">
        <pathelement location="D:/工具/AutoTestTools/NeedLibs-New/selenium-java-2.52.0.jar"/>
        <pathelement location="D:/工具/AutoTestTools/NeedLibs-New/selenium-server-standalone-2.52.0.jar"/>
        <pathelement location="D:/工具/AutoTestTools/NeedLibs-New/java-client-3.4.1.jar"/>
    </path>
    <path id="CalculatorTestNG.classpath">
        <pathelement location="bin"/>
        <path refid="TestNG.libraryclasspath"/>
        <path refid="Appium_NeedLibs.userclasspath"/>
    </path>
    
    <!-- lrm,add -->
    <!-- define the TestNG task -->
    <taskdef name="testng" classname="com.beust.testng.TestNGAntTask"
             classpathref="CalculatorTestNG.classpath"/>
    
    <property name="base.dir" value="."/>
    <property name="testng.output.dir" value="${base.dir}/test-output"/>
    <property name="testng.file" value="testng.xml"/>
    
    <!-- lrm,add end -->
    
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" 
            source="${source}" target="${target}" encoding="UTF-8">
            <src path="src"/>
            <classpath refid="CalculatorTestNG.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    
    <target name="testNG" depends="build"> 
       <echo message="running tests"/> 
       <testng classpathref="CalculatorTestNG.classpath" outputDir="${testng.output.dir}"> 
           <xmlfileset dir="${basedir}" includes="testng.xml"/> 
       </testng> 
    </target>
    
</project>
